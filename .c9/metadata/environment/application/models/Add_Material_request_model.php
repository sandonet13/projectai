{"changed":true,"filter":false,"title":"Add_Material_request_model.php","tooltip":"/application/models/Add_Material_request_model.php","value":"<?php\n\nclass Add_material_request_model extends Crud_model {\n\n    private $table = null;\n\n    function __construct() {\n        $this->table = 'expenses';\n        parent::__construct($this->table);\n    }\n\n    function get_details($options = array()) {\n        $expenses_table = $this->db->dbprefix('expenses');\n        $expense_categories_table = $this->db->dbprefix('expense_categories');\n        $projects_table = $this->db->dbprefix('projects');\n        $users_table = $this->db->dbprefix('users');\n        $taxes_table = $this->db->dbprefix('taxes');\n        $clients_table = $this->db->dbprefix('clients');\n        $location_categories_table = $this->db->dbprefix('location_categories');\n        $measurement_table = $this->db->dbprefix('measurement');\n\n\n\n        $where = \"\";\n        $id = get_array_value($options, \"id\");\n        if ($id) {\n            $where = \" AND $expenses_table.id=$id\";\n        }\n        $start_date = get_array_value($options, \"start_date\");\n        $end_date = get_array_value($options, \"end_date\");\n        if ($start_date && $end_date) {\n            $where .= \" AND ($expenses_table.expense_date BETWEEN '$start_date' AND '$end_date') \";\n        }\n        \n        $location_id = get_array_value($options, \"location_id\");\n        if ($location_id) {\n            $where .= \" AND $expenses_table.location_id=$location_id\";\n        }\n        \n        $measurement_id = get_array_value($options, \"measurement_id\");\n        if ($measurement_id) {\n            $where .= \" AND $expenses_table.measurement_id=$measurement_id\";\n        }\n\n        $category_id = get_array_value($options, \"category_id\");\n        if ($category_id) {\n            $where .= \" AND $expenses_table.category_id=$category_id\";\n        }\n\n        $project_id = get_array_value($options, \"project_id\");\n        if ($project_id) {\n            $where .= \" AND $expenses_table.project_id=$project_id\";\n        }\n\n        $user_id = get_array_value($options, \"user_id\");\n        if ($user_id) {\n            $where .= \" AND $expenses_table.user_id=$user_id\";\n        }\n\n        $client_id = get_array_value($options, \"client_id\");\n        if ($client_id) {\n            $where .= \" AND $expenses_table.client_id=$client_id\";\n        }\n\n        $recurring = get_array_value($options, \"recurring\");\n        if ($recurring) {\n            $where .= \" AND $expenses_table.recurring=1\";\n        }\n\n        //prepare custom fild binding query\n        $custom_fields = get_array_value($options, \"custom_fields\");\n        $custom_field_query_info = $this->prepare_custom_field_query_string(\"expenses\", $custom_fields, $expenses_table);\n        $select_custom_fields = get_array_value($custom_field_query_info, \"select_string\");\n        $join_custom_fields = get_array_value($custom_field_query_info, \"join_string\");\n\n\n        $sql = \"SELECT $expenses_table.*, $expense_categories_table.title as category_title, $location_categories_table.title as location_title, $measurement_table.title as measurement_title,\n                 CONCAT($users_table.first_name, ' ', $users_table.last_name) AS linked_user_name,\n                 $clients_table.company_name AS linked_client_name,\n                 $projects_table.title AS project_title,\n                 tax_table.percentage AS tax_percentage\n                 $select_custom_fields\n        FROM $expenses_table\n        LEFT JOIN $location_categories_table ON $location_categories_table.id= $expenses_table.location_id\n        LEFT JOIN $measurement_table ON $measurement_table.id= $expenses_table.measurement_id\n        LEFT JOIN $expense_categories_table ON $expense_categories_table.id= $expenses_table.category_id\n        LEFT JOIN $clients_table ON $clients_table.id= $expenses_table.client_id\n        LEFT JOIN $projects_table ON $projects_table.id= $expenses_table.project_id\n        LEFT JOIN $users_table ON $users_table.id= $expenses_table.user_id\n        LEFT JOIN (SELECT $taxes_table.* FROM $taxes_table) AS tax_table ON tax_table.id = $expenses_table.tax_id\n            $join_custom_fields\n        WHERE $expenses_table.deleted=0 $where\";\n        return $this->db->query($sql);\n    }\n\n    function get_income_expenses_info() {\n        $expenses_table = $this->db->dbprefix('expenses');\n        $invoice_payments_table = $this->db->dbprefix('invoice_payments');\n        $taxes_table = $this->db->dbprefix('taxes');\n        $info = new stdClass();\n\n        $sql1 = \"SELECT SUM($invoice_payments_table.amount) as total_income\n        FROM $invoice_payments_table\n        WHERE $invoice_payments_table.deleted=0\";\n        $income = $this->db->query($sql1)->row();\n\n        $sql2 = \"SELECT SUM($expenses_table.amount + IFNULL(tax_table.percentage,0)/100*IFNULL($expenses_table.amount,0) + IFNULL(tax_table2.percentage,0)/100*IFNULL($expenses_table.amount,0)) AS total_expenses\n        FROM $expenses_table\n        LEFT JOIN (SELECT $taxes_table.id, $taxes_table.percentage FROM $taxes_table) AS tax_table ON tax_table.id = $expenses_table.tax_id\n        LEFT JOIN (SELECT $taxes_table.id, $taxes_table.percentage FROM $taxes_table) AS tax_table2 ON tax_table2.id = $expenses_table.tax_id2\n        WHERE $expenses_table.deleted=0\";\n        $expenses = $this->db->query($sql2)->row();\n\n        $info->income = $income->total_income;\n        $info->expneses = $expenses->total_expenses;\n        return $info;\n    }\n\n    function get_yearly_expenses_chart($year, $project_id = 0) {\n        $expenses_table = $this->db->dbprefix('expenses');\n        $taxes_table = $this->db->dbprefix('taxes');\n\n        $where = \"\";\n        if ($project_id) {\n            $where = \" AND $expenses_table.project_id=$project_id\";\n        }\n\n        $expenses = \"SELECT SUM($expenses_table.amount + IFNULL(tax_table.percentage,0)/100*IFNULL($expenses_table.amount,0) + IFNULL(tax_table2.percentage,0)/100*IFNULL($expenses_table.amount,0)) AS total, MONTH($expenses_table.expense_date) AS month\n        FROM $expenses_table\n        LEFT JOIN (SELECT $taxes_table.id, $taxes_table.percentage FROM $taxes_table) AS tax_table ON tax_table.id = $expenses_table.tax_id\n        LEFT JOIN (SELECT $taxes_table.id, $taxes_table.percentage FROM $taxes_table) AS tax_table2 ON tax_table2.id = $expenses_table.tax_id2\n        WHERE $expenses_table.deleted=0 AND YEAR($expenses_table.expense_date)= $year $where\n        GROUP BY MONTH($expenses_table.expense_date)\";\n\n        return $this->db->query($expenses)->result();\n    }\n\n    //get the recurring expenses which are ready to renew as on a given date\n    function get_renewable_expenses($date) {\n        $expenses_table = $this->db->dbprefix('expenses');\n\n        $sql = \"SELECT * FROM $expenses_table\n                        WHERE $expenses_table.deleted=0 AND $expenses_table.recurring=1\n                        AND $expenses_table.next_recurring_date IS NOT NULL AND $expenses_table.next_recurring_date<='$date'\n                        AND ($expenses_table.no_of_cycles < 1 OR ($expenses_table.no_of_cycles_completed < $expenses_table.no_of_cycles ))\";\n\n        return $this->db->query($sql);\n    }\n\n}\n","undoManager":{"mark":-2,"position":4,"stack":[[{"start":{"row":2,"column":6},"end":{"row":2,"column":20},"action":"remove","lines":["Expenses_model"],"id":2},{"start":{"row":2,"column":6},"end":{"row":2,"column":7},"action":"insert","lines":["A"]},{"start":{"row":2,"column":7},"end":{"row":2,"column":8},"action":"insert","lines":["d"]},{"start":{"row":2,"column":8},"end":{"row":2,"column":9},"action":"insert","lines":["d"]},{"start":{"row":2,"column":9},"end":{"row":2,"column":10},"action":"insert","lines":["_"]}],[{"start":{"row":2,"column":10},"end":{"row":2,"column":11},"action":"insert","lines":["m"],"id":3},{"start":{"row":2,"column":11},"end":{"row":2,"column":12},"action":"insert","lines":["a"]}],[{"start":{"row":2,"column":12},"end":{"row":2,"column":13},"action":"insert","lines":["t"],"id":4},{"start":{"row":2,"column":13},"end":{"row":2,"column":14},"action":"insert","lines":["e"]},{"start":{"row":2,"column":14},"end":{"row":2,"column":15},"action":"insert","lines":["r"]},{"start":{"row":2,"column":15},"end":{"row":2,"column":16},"action":"insert","lines":["i"]},{"start":{"row":2,"column":16},"end":{"row":2,"column":17},"action":"insert","lines":["a"]},{"start":{"row":2,"column":17},"end":{"row":2,"column":18},"action":"insert","lines":["l"]},{"start":{"row":2,"column":18},"end":{"row":2,"column":19},"action":"insert","lines":["_"]}],[{"start":{"row":2,"column":19},"end":{"row":2,"column":20},"action":"insert","lines":["r"],"id":5},{"start":{"row":2,"column":20},"end":{"row":2,"column":21},"action":"insert","lines":["e"]},{"start":{"row":2,"column":21},"end":{"row":2,"column":22},"action":"insert","lines":["q"]},{"start":{"row":2,"column":22},"end":{"row":2,"column":23},"action":"insert","lines":["u"]},{"start":{"row":2,"column":23},"end":{"row":2,"column":24},"action":"insert","lines":["e"]},{"start":{"row":2,"column":24},"end":{"row":2,"column":25},"action":"insert","lines":["s"]},{"start":{"row":2,"column":25},"end":{"row":2,"column":26},"action":"insert","lines":["t"]},{"start":{"row":2,"column":26},"end":{"row":2,"column":27},"action":"insert","lines":["_"]}],[{"start":{"row":2,"column":27},"end":{"row":2,"column":28},"action":"insert","lines":["m"],"id":6},{"start":{"row":2,"column":28},"end":{"row":2,"column":29},"action":"insert","lines":["o"]},{"start":{"row":2,"column":29},"end":{"row":2,"column":30},"action":"insert","lines":["d"]},{"start":{"row":2,"column":30},"end":{"row":2,"column":31},"action":"insert","lines":["e"]},{"start":{"row":2,"column":31},"end":{"row":2,"column":32},"action":"insert","lines":["l"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":2,"column":32},"end":{"row":2,"column":32},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1617247924915}